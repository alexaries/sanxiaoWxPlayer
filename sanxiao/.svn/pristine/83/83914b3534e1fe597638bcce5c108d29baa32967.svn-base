/**
 * Created by Administrator on 2018/7/5.
 */
class BaseProxy_Http_Dev {

    /**
     *  update by sbb
     *  实际数据注释
     *  -1 爆炸后的填充块
     *  1001-1006 => 空块 正常格 传染块(红) 传染块(绿) 可以穿过的空块 月饼坑
     *  2001-2006 => 普通1 普通2 普通3 普通4 普通5 普通6 2009 随机普通块 2098 黑洞
     *  2011-2016 => 横线特效1 横线特效2 横线特效3 横线特效4 横线特效5 横线特效6 2019 横线特效随机
     *  2021-2026 => 竖线特效1 竖线特效2 竖线特效3 竖线特效4 竖线特效5 竖线特效6 2029 竖线特效随机
     *  2031-2036 => 爆炸特效1 爆炸特效2 爆炸特效3 爆炸特效4 爆炸特效5 爆炸特效6 2039 爆炸特效随机
     *  2041-2046 => 风车特效1 风车特效2 风车特效3 风车特效4 风车特效5 风车特效6 2049 风车特效随机
     *  2600-2606 => 变色块1   变色块2   变色块3   变色块4   变色块5   变色块6   2600 变色块随机
     *  2101-2106 => 1层礼品盒 2层礼品盒 3层礼品盒 4层礼品盒 5层礼品盒 6层礼品盒
     *  2121 榛子 2131 宝石块 2141 毒液 2201 道具宝箱
     *  2301-2304 上下左右 魔法石1
     *  2317 2319 2321 2323     上下左右 魔法石2
     *  2318 2320 2322 2324    上下左右 魔法石2
     *  2311 2325 2326        鸡蛋块红1 鸡蛋块红2 鸡蛋块红3
     *  2312 2327 2328        鸡蛋块蓝1 鸡蛋块蓝2 鸡蛋块蓝3
     *  2313 2329 2330        鸡蛋块紫1 鸡蛋块紫2 鸡蛋块紫3
     *  2314 2331 2332        鸡蛋块绿1 鸡蛋块绿2 鸡蛋块绿3
     *  2315 2333 2334        鸡蛋块黄1 鸡蛋块黄2 鸡蛋块黄3
     *  2316 2335 2336        鸡蛋块橙1 鸡蛋块橙2 鸡蛋块橙3
     *  3001 3002 3003  3011      1层冰层 2层冰层 3层冰层 1层流沙
     *  4001 5001 5002        铁丝网 1层云层 2层云层
     *  6001 6002 6004 6008   上栏杆 下栏杆 左栏杆 右栏杆
     *  -1 -1             浅色毛球 深色毛球
     *  2151         月饼
     *  8001         虫子
     *  2401-2406             普通加步数（红） 普通加步数（蓝） 普通加步数（紫） 普通加步数（绿） 普通加步数（黄） 普通加步数（橙）
     *  2501-2506             普通加时间（红） 普通加时间（蓝） 普通加时间（紫） 普通加时间（绿） 普通加时间（黄） 普通加时间（橙）
     *
     */
    public static createDevData() {
        let urlParamArr = SystemConst.urlParameters;
        let isTest = urlParamArr["IsTest"];
        let random;egret
        // 产生 1-6 的随机数
        if (isTest && isTest == "true") {
            random = Math.floor(Math.random()* 3) + 1;
        } else {
            random = 70;
        }
        // random = 3;
        App.MessageCenter.addListener(Msg.Event.RePlay,BaseProxy_Http_Dev.createDevData,this);

        let data = {};
        let Stage = {};
        // 第一层 地板层
        let  BlocksArr1 = [];
        // 第二层 毛毛层
        let  BlocksArr2 = [];
        // 第三层 冰层
        let  BlocksArr3 = [];
        // 第四层 消除块层
        let  BlocksArr4 = [];
        // 第五层 铁丝网层
        let  BlocksArr5 = [];
        // 第六层 栏杆层
        let  BlocksArr6 = [];
        // 第七层 毛球层
        let  BlocksArr7 = [];
        // 第八层 云层
        let  BlocksArr8 = [];
        // 现有数据意义注释
        // 2001-2006 普通块 2011-2016 横消  2021-2026 竖消 2098 黑洞块 2031-2036 炸弹块 2041-2046 风车快/鸟/fish

        // 表现层四层块
        if (random == 1) {
            BlocksArr4=[
                2003, 2001, 2003, 2002, 2004, 2003, 2002, 2003, 2004,
                2001, 2001, 2003, 2002, 2002, 2003, 2002, 2003, 2004,
                2002, 2003, 2004, 2003, 2004, 2002, 2003, 2004, 2005,
                2002, 2003, 2004, 2003, 2006, 2002, 2003, 2004, 2005,
                2001, 2004, 2003, 2001, 2003, 2004, 2001, 2002, 2001,
                2001, 2004, 2003, 2001, 2003, 2004, 2001, 2002, 2002,
                2002, 2005, 2004, 2002, 2004, 2001, 2004, 2001, 2003,
                2002, 2005, 2004, 2002, 2004, 2001, 2004, 2001, 2003,
                2003, 2006, 2006, 2005, 2005, 2002, 2005, 2002, 2006
            ];
        }
        if (random == 2) {
            BlocksArr4=[
                2001, 2001, 2003, 2002, 2002, 2003, 2002, 2003, 2004,
                2002, 2003, 2004, 2003, 2004, 2002, 2003, 2004, 2005,
                2002, 2005, 2004, 2014, 2002, 2001, 2004, 2001, 2003,
                2003, 2001, 2003, 2002, 2004, 2003, 2002, 2003, 2004,
                2001, 2004, 2003, 2001, 2003, 2004, 2001, 2002, 2001,
                2002, 2003, 2004, 2003, 2006, 2002, 2003, 2004, 2022,
                2001, 2004, 2003, 2001, 2003, 2004, 2001, 2002, 2002,
                2002, 2036, 2004, 2002, 2004, 2001, 2004, 2001, 2003,
                2003, 2006, 2006, 2005, 2005, 2002, 2005, 2002, 2006
            ];
        }
        if (random == 3) {
            BlocksArr4=[
                2001, 2001, 2003, 2001, 2002, 2001, 2002, 2003, 2001,
                2002, 2003, 2004, 2003, 2004, 2002, 2003, 2004, 2001,
                2002, 2005, 2042, 2014, 2002, 2001, 2002, 2001, 2003,
                2003, 2001, 2003, 2002, 2004, 2003, 2001, 2098, 2004,
                2001, 2004, 2003, 2001, 2003, 2004, 2001, 2002, 2001,
                2002, 2003, 2004, 2003, 2006, 2002, 2003, 2004, 2022,
                2001, 2004, 2003, 2001, 2003, 2001, 2001, 2046, 2002,
                2002, 2036, 2004, 2002, 2001, 2001, 2004, 2001, 2003,
                2001, 2006, 2001, 2005, 2005, 2002, 2005, 2002, 2001
            ];
        }

        if (random == 4) {
            BlocksArr4=[
                2003, 2001, 2003, 2002, 2004, 2003, 2002, 2003, 2004,
                2002, 2003, 2004, 2003, 2006, 2002, 2003, 2004, 2022,
                2001, 2001, 2003, 2002, 2002, 2003, 2002, 2003, 2004,
                2002, 2003, 2004, 2003, 2004, 2002, 2003, 2004, 2005,
                2001, 2004, 2003, 2001, 2003, 2004, 2001, 2002, 2001,
                2002, 2005, 2042, 2014, 2002, 2001, 2004, 2001, 2003,
                2002, 2036, 2004, 2002, 2044, 2001, 2004, 2001, 2003,
                2001, 2004, 2003, 2001, 2003, 2004, 2001, 2046, 2002,
                2003, 2006, 2006, 2005, 2005, 2002, 2005, 2002, 2006
            ];
        }
        if (random == 5) {
            BlocksArr4=[
                2002, 2003, 2004, 2003, 2004, 2002, 2003, 2004, 2005,
                2001, 2001, 2003, 2002, 2002, 2003, 2002, 2003, 2004,
                2003, 2001, 2003, 2002, 2004, 2003, 2002, 2003, 2004,
                2002, 2005, 2042, 2014, 2002, 2001, 2004, 2001, 2003,
                2001, 2004, 2003, 2001, 2003, 2004, 2001, 2046, 2002,
                2012, 2003, 2004, 2003, 2006, 2002, 2003, 2004, 2022,
                2002, 2036, 2004, 2002, 2044, 2001, 2004, 2001, 2003,
                2011, 2024, 2003, 2011, 2003, 2014, 2011, 2002, 2001,
                2003, 2026, 2006, 2005, 2025, 2022, 2005, 2002, 2006
            ];
        }
        if (random == 6) {
            BlocksArr4=[
                2004, 2003, 2004, 2003, 2004, 2002, 2003, 2004, 2005,
                2003, 2001, 2003, 2002, 2004, 2003, 2002, 2003, 2004,
                2001, 2004, 2003, 2001, 2003, 2004, 2001, 2002, 2001,
                2002, 2036, 2004, 2002, 2044, 2001, 2004, 2001, 2098,
                2014, 2003, 2004, 2003, 2006, 2002, 2003, 2004, 2022,
                2002, 2005, 2002, 2014, 2002, 2001, 2004, 2001, 2003,
                2001, 2004, 2003, 2001, 2003, 2004, 2001, 2046, 2002,
                2001, 2001, 2003, 2002, 2002, 2003, 2002, 2003, 2004,
                2004, 2006, 2006, 2005, 2005, 2002, 2005, 2002, 2001
            ];
        }
        if (random == 7) {
            BlocksArr4=[
                2098, 2003, 2004, 2003, 2004, 2002, 2003, 2004, 2005,
                2003, 2001, 2003, 2002, 2004, 2003, 2002, 2003, 2004,
                2001, 2004, 2003, 2001, 2003, 2004, 2001, 2002, 2001,
                2002, 2036, 2004, 2002, 2044, 2001, 2004, 2001, 2098,
                2014, 2003, 2004, 2003, 2006, 2002, 2003, 2004, 2022,
                2002, 2005, 2042, 2014, 2002, 2001, 2004, 2001, 2003,
                2001, 2004, 2003, 2001, 2003, 2004, 2001, 2046, 2002,
                2001, 2001, 2003, 2002, 2002, 2003, 2002, 2003, 2004,
                2098, 2006, 2006, 2005, 2005, 2002, 2005, 2002, 2098
            ];
        }
        // 特效太多导致出现空块的bug
        if (random == 8) {
            BlocksArr4=[
                2003, 2001, 2003, 2002, 2004, 2003, 2002, 2003, 2004,
                2001, 2001, 2003, 2002, 2002, 2003, 2002, 2003, 2004,
                2002, 2003, 2004, 2003, 2004, 2002, 2003, 2004, 2005,
                2002, 2003, 2004, 2003, 2006, 2002, 2003, 2004, 2005,
                2001, 2004, 2003, 2001, 2003, 2004, 2001, 2002, 2001,
                2001, 2004, 2003, 2001, 2003, 2004, 2001, 2002, 2002,
                2002, 2005, 2004, 2002, 2004, 2001, 2004, 2001, 2003,
                2002, 2005, 2004, 2002, 2004, 2001, 2004, 2001, 2003,
                2003, 2006, 2006, 2005, 2005, 2002, 2005, 2002, 2006
            ];
        }
        // 云层 和 小恶魔 bug
        if (random == 9) {
            BlocksArr4=[
                2201, 2001, 2003, 2002, 2004, 2003, 2002, 2003, 2004,
                2001, 2001, 2003, 2002, 2002, 2003, 2002, 2003, 2004,
                2141, 2141, 2141, 2141, 2004, 2401, 2003, 2004, 2005,
                2002, 2003, 2004, 2003, 2006, 2002, 2003, 2004, 2005,
                2001, 2004, 2105, 2001, 2003, 2004, 2001, 2002, 2001,
                2001, 2002, 2001, 2006, 2003, 2002, 2001, 2002, 2001,
                2002, 2005, 2002, 2003, 2002, 2004, 2004, 2001, 2003,
                2002, 2002, 2006, 2001, 2004, 2001, 2004, 2001, 2141,
                2003, 2006, 2001, 2006, 2005, 2002, 2005, 2002, 2006
            ];
        }


        if (random==70){
            BlocksArr1 = [
                1002, 1002, 1002, 1002, 1002, 1002, 1002, 1002, 1002,
                1002, 1002, 1002, 1002, 1002, 1002, 1002, 1002, 1002,
                1002, 1002, 1002, 1002, 1002, 1002, 1002, 1002, 1002,
                1002, 1002, 1002, 1002, 1002, 1002, 1002, 1002, 1002,
                1002, 1002, 1002, 1002, 1002, 1002, 1002, 1002, 1002,
                1002, 1002, 1002, 1002, 1002, 1002, 1002, 1002, 1002,
                1002, 1002, 1002, 1002, 1002, 1002, 1002, 1002, 1002,
                1002,1002, 1002, 1002, 1002, 1002, 1006, 1002, 1002,
                1002,1002, 1002, 1002, 1002, 1002, 1001, 1002, 1006
            ];
            //表现层 第三层
            BlocksArr3=[
                -1, -1, -1, -1, -1, -1, -1, -1, -1,
                -1, -1, -1, -1, -1, -1, -1, -1, -1,
                -1, -1, -1, -1, -1, -1, -1, -1, -1,
                -1, -1, -1, -1, -1, -1, -1, -1, -1,
                -1, -1, -1, -1, -1, -1, -1, -1, -1,
                -1, -1, -1, -1, -1, -1, -1, -1, -1,
                -1, -1, -1, -1, -1, -1, -1, -1, -1,
                -1, -1, -1, -1, -1, -1, -1, -1, -1,
                -1, -1, -1, -1, -1, -1, -1, -1, -1
            ];
            // 第四层 方块层
            BlocksArr4=[
                // 2001, 2006, 2001, 2600, 2002, 2003, 2002, 2003, 2001,
                // 2003, 2005, 2001, 2006, 2004, 2006, 2002, 2006, 2004,
                // 2002, 2004, 2004, 2001, 2004, 2401, 2003, 2004, 2606,
                // 2001, 2002, 2014, 2003, 2600, 2002, 2003, 2003, 2005,
                // 2003, 2004, 2005, 2003, 2121, 2121, 2121, 2022, 2606,
                // 2001, 2005, 2001, 2006, 2002, 2600, 2003, 2121, 2006,
                // 2003, 2001, 2002, 2006, 2002, 2004, 2151, 2001, 2003,
                // 2328, 2004, 2326, 2002, 2004, 2121, 2004, 2001, 2121,
                // 2005, 2002, 2002, 2006, 2001, 2002, 2001, 2121, 2151
                2600, 2001, 2001, 2002, 2002, 2006, 2002, 2003, 2001,
                2003, 2600, 2001, 2600, 2004, 2006, 2002, 2006, 2004,
                2002, 2004, 2004, 2001, 2004, 2401, 2003, 2004, 2001,
                2001, 2002, 2014, 2003, 2006, 2002, 2003, 2003, 2005,
                2003, 2005, 2005, 2003, 2121, 2121, 2121, 2022, 2003,
                2001, 2005, 2001, 2006, 2002, 2005, 2003, 2121, 2006,
                2003, 2001, 2002, 2006, 2002, 2004, 2151, 2001, 2003,
                2328, 2004, 2326, 2002, 2004, 2121, 2004, 2001, 2001,
                2005, 2002, 2002, 2006, 2001, 2002, 2001, 2121, 2098
            ];
            //一层
            //第五层 铁丝网成
            BlocksArr5=[
                -1, -1, -1, -1, -1, -1,-1,-1, -1,
                -1, -1, -1, -1, -1, -1,-1,-1, -1,
                -1, -1, -1, -1, -1, -1,-1,-1, -1,
                -1, -1, -1, -1, -1, -1,-1,-1, -1,
                -1, -1, -1, -1, -1,-1,-1,-1, -1,
                -1, -1, -1,-1 , -1, -1,-1,-1, -1,
                -1, -1, -1, -1, -1, -1,-1,-1, -1,
                -1, -1, -1, -1, -1, -1,-1,-1, -1,
                -1, -1, -1, -1, -1, -1,-1,-1, -1,
            ];
            // 第六层 栏杆层
            BlocksArr6 = [
                -1, -1, -1, -1, -1, -1, -1, -1, -1,
                -1, -1, -1, -1, -1, -1, -1, -1, -1,
                -1, -1, -1, -1, -1, -1, -1, -1, -1,
                -1, -1, -1, -1, -1, -1, -1, -1, -1,
                -1, -1, -1, -1, -1, -1, -1, -1, -1,
                -1, -1, -1, -1, -1, -1, -1, -1, -1,
                -1, -1, -1, -1, -1, -1, -1, -1, -1,
                -1,-1, -1, -1, -1, -1, -1, -1, -1,
                -1,-1, -1, -1, -1, -1, -1, -1, -1
            ];
            // 第七层 毛球层
            BlocksArr7 = [
                -1, -1, -1, -1, -1, -1,-1,-1, -1,
                -1, -1, -1, -1, -1, -1,-1,-1, -1,
                -1, -1, -1, -1, -1, -1,-1,-1, -1,
                -1, -1, -1, -1, -1, -1,-1,-1, -1,
                -1, -1, -1, -1, -1, -1,-1,-1, -1,
                -1, -1, -1, -1, -1, -1,-1,-1, -1,
                -1, -1, -1, -1, -1, -1,-1,-1, -1,
                -1, -1, -1, -1, -1, -1,-1,-1, -1,
                -1, -1, -1, -1, -1, -1,-1,-1, -1
            ];
            // 第8层 云层块
            BlocksArr8=[
                -1, -1, -1, -1, -1, -1,-1,-1, -1,
                -1, -1, -1, -1, -1, -1,-1,-1, -1,
                -1, -1, -1, -1, -1, -1,-1,-1, -1,
                -1, -1, -1, -1, -1, -1,-1,-1, -1,
                -1, -1, -1, -1, -1, -1,-1,-1, -1,
                -1, -1, -1, -1, -1, -1,-1,-1, -1,
                -1, -1, -1, -1, -1, -1,-1,-1, -1,
                -1, -1, -1, -1, -1, -1,-1,-1, -1,
                -1, -1, -1, -1, -1, -1,-1,-1, -1
            ];
        }

        let BlocksTest=[];
        for(let i=0;i<9;i++){
            for(let j=0;j<9;j++){
                let BlocksTestObj={"Id1":1002,"Id2":-1,"Id3":-1,"Id4":-1,"Id5":-1,"Id6":-1,"Id7":-1};
                BlocksTestObj["Id1"]=BlocksArr1[i*9+j];
                BlocksTestObj["Id2"]=BlocksArr4[i*9+j];
                BlocksTestObj["Id5"]=BlocksArr8[i*9+j];
                BlocksTestObj["Id6"]=BlocksArr6[i*9+j];
                BlocksTestObj["Id4"]=BlocksArr5[i*9+j];
                BlocksTestObj["Id7"]=BlocksArr7[i*9+j];
                BlocksTest.push(BlocksTestObj);
            }
        }

        //随机数据
        let Blocks=[];
        let BlocksArr=[
            2001,2002,2003,2004,2005,2006,
            2011,2012,2013,2014,2015,2016,
            2031,2032,2033,2034,2035,2036,
            2041,2042,2043,2044,2045,2046,
            2021,2022,2023,2024,2025,2026,
            2098
        ];
        for(let i=0;i<9;i++){
            for(let j =0;j<9;j++){
                let BlocksObj={"Id1":1002,"Id2":-1,"Id3":-1,"Id4":-1,"Id5":-1,"Id6":-1,"Id7":-1};
                let randomNum=Math.floor(Math.random()*100);
                let blockNum;
                if(randomNum<70){
                    blockNum=Math.floor(Math.random()*6);
                }else{
                    blockNum=Math.floor(Math.random()*31);
                }
                BlocksObj["Id2"]=BlocksArr[blockNum];
                Blocks.push(BlocksObj);
            }
        }
        Stage["Blocks"] = BlocksTest;
        Log.getInstance().trace("==========2345678889=============",0);
        Log.getInstance().trace(Stage["Blocks"],0);
        // Stage["Blocks"] = Blocks;
        data["Stage"] = Stage;
        // 游戏规则 0:消除 1:收集
        data["Stage"].RuleType = 0//random%2 == 0?1:0;
        if (random == 3) {
            data["Stage"].RuleType = 1;
        }
        Log.getInstance().trace("random:"+random,0);
        Log.getInstance().trace("RuleType:"+data["Stage"].RuleType,0);
        Log.getInstance().trace(data["Stage"].RuleType==0?"消除模式":"收集模式",0);
        //是否生成风车
        data["Stage"].CanCreateFish = 1;
        //风车的数量
        data["Stage"].FishNum = 2;
        data["Stage"].SingelModel = 1;
        if ( random == 1) {
            data["Stage"].Step = 20;
            data["Stage"].Targets1 =[
                {"Cur":0,"Num":1000,"Target":2001},
                {"Cur":0,"Num":1,"Target":2002},
                {"Cur":0,"Num":1,"Target":2003}
            ];
            data["Stage"].Targets2 = [{"Cur":0,"Num":50,"Target":1004}];
        } else if (random == 2) {
            data["Stage"].Step = 20;
            data["Stage"].Targets1 =[
                {"Cur":0,"Num":10,"Target":2002},
                {"Cur":0,"Num":10,"Target":2003},
                {"Cur":0,"Num":20,"Target":2004}
            ];
            data["Stage"].Targets2 = [{"Cur":0,"Num":50,"Target":1004}];
        }else if (random == 3) {
            data["Stage"].Step = 30;
            data["Stage"].Targets1 =[
                {"Cur":0,"Num":0,"Target":2001}
            ];
            data["Stage"].Targets2 = [{"Cur":0,"Num":50,"Target":1004}];
        }else if (random == 4) {
            data["Stage"].Step = 8;
            data["Stage"].Targets1 =[
                {"Cur":0,"Num":10,"Target":2004},
                {"Cur":0,"Num":10,"Target":2002},
                {"Cur":0,"Num":10,"Target":2005}
            ];
            data["Stage"].Targets2 = [{"Cur":0,"Num":50,"Target":1004}];
        }else if (random == 5) {
            data["Stage"].Step = 18;
            data["Stage"].Targets1 =[
                {"Cur":0,"Num":2,"Target":2012},
                {"Cur":0,"Num":1,"Target":2011}
            ];
            data["Stage"].Targets2 = [{"Cur":0,"Num":50,"Target":1004}];
        }else if (random == 6) {
            data["Stage"].Step = 8;
            data["Stage"].Targets1 =[
                {"Cur":0,"Num":10,"Target":2001},
                {"Cur":0,"Num":10,"Target":2002},
                {"Cur":0,"Num":10,"Target":2003}
            ];
            data["Stage"].Targets2 = [{"Cur":0,"Num":50,"Target":1004}];
        } else if (random==70){
            data["Stage"].Step = 5;
            data["Stage"].Targets1 =[
                // {"Cur":0,"Num":10000,"Target":2001},
                // {"Cur":0,"Num":10,"Target":2002},
                {"Cur":0,"Num":10,"Target":2151}
            ];
            data["Stage"].Targets2 = [{"Cur":0,"Num":50,"Target":1004}];
        } else {
            data["Stage"].Step = 30;
            data["Stage"].Targets1 =[
                {"Cur":0,"Num":10,"Target":2001},
                {"Cur":0,"Num":10,"Target":2002},
                {"Cur":0,"Num":10,"Target":2003}
            ];
            data["Stage"].Targets2 = [{"Cur":0,"Num":50,"Target":1004}];
        }
        TG_MapData.getInstance().beginStageData =BaseProxy_Http.deepCopy( data["Stage"]["Blocks"]);

        // 掉落模式   true 1 顺序 false 0 随机
        data["Stage"].DropModel = false;
        data["Stage"].DropModels = [1,0,0,0,0,0,1,0,0];
        // 道具id列表
        data["Stage"].ItemIds = [1,2];
        // 道具数量
        data["Stage"].ItemNums = [55,10];

        //是否为限时关卡
        data["Stage"].IsTimeLimit = false;
        //限时关卡的倒计时时长
        data["Stage"].TimeLimitLength = 1000;

        //道具宝箱
        data["Stage"].PropChests = [

            {GetByRamdom:"true",HitTimes:3,Idx:0,PropIds:[1,2,3,4,5,6],PropNums:[1,1,1,1,1,1]}
        ];
        //随机颜色 SetColorNumElement
        data["Stage"].SetColorNumElement = [1,2,3,4,5,6];

        data["Stage"].IsConditionLimit = true;//是否有条件限制
        data["Stage"].AutoRollTargets = [];
        data["Stage"].ARollTargets = [];
        // 初始化TG_Stage 数据
        TG_MapData.getInstance().stageData = data;
        TG_Stage.init();
        App.MessageCenter.dispatch(Msg.Event.BeginGame);
        App.MessageCenter.dispatch(Msg.Event.H5ServerDataInitComplete);
    }
}
